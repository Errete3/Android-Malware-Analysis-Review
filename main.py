# TensorFlow and tf.keras
import tensorflow as tf
from tensorflow import keras

# Helper libraries
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split

# Import samples & Suffle & Split in training + testing
from dump_apks import ook_apks_features, ook_apks_labels, mal_apks_features, mal_apks_labels
X = np.array(ook_apks_features + mal_apks_features)
y = np.array(ook_apks_labels + mal_apks_labels)
print(X)
print(y)
X_trn, X_tst, y_trn, y_tst = train_test_split(X, y, test_size=0.2, random_state=42)

# Building the Model
#   Setup the layers
model = keras.Sequential([
    keras.layers.Dense(128, activation=tf.nn.relu),
    keras.layers.Dense(2, activation=tf.nn.softmax)
])
#   Compile the model
model.compile(optimizer=tf.train.AdamOptimizer(), 
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# Train the Model
model.fit(X_trn, y_trn, epochs=5)

# Evaluate the accuracy
test_loss, test_acc = model.evaluate(X_tst, y_tst)
print(test_acc)
